@page "/fetchmail"
@using Scan2Go.Entity.IdsAndDocuments
@using Newtonsoft.Json
@inject HttpClient Http

<PageTitle>Reading mail from outlook and progressing attachments</PageTitle>

<h1>Data of scanned documents</h1>

<p>This component demonstrates fetching mail data from the outlook and show progress data from Regula API responses.</p>

@if (IdentityCards.Any() == false && Passports.Any() == false)
{
    <p><em>Waiting response from mail fetching...</em></p>
}
else
{
    <div class="identity-cards">
        @foreach (var identityCard in IdentityCards)
        {
            <div class="identity-card">
                <div class="portrait">
                    <p><strong>Document category:</strong></p>
                    <td>@identityCard.DocumentCategory</td>
                    <p><strong></strong></p>

                    <p><strong>Document type:</strong></p>
                    <td>@identityCard.DocumentType</td>
                    <p><strong></strong></p>

                    <p><strong>Document Front side:</strong></p>
                    @if (string.IsNullOrWhiteSpace(identityCard.DocumentFrontSide) == false)
                    {
                        <img src="data:image/jpeg;base64,@identityCard.DocumentFrontSide" alt="Document Front Side Image" />
                    }
                    else
                    {
                        <p>No document front side image available</p>
                    }
                    <p><strong>Portrait:</strong></p>
                    @if (string.IsNullOrWhiteSpace(identityCard.PortraitImage) == false)
                    {
                        <img src="data:image/jpeg;base64,@identityCard.PortraitImage" alt="Portrait Image" />
                    }
                    else
                    {
                        <p>No Portrait available</p>
                    }
                    <p><strong>Ghost Portrait:</strong></p>
                    @if (string.IsNullOrWhiteSpace(identityCard.GhostPortrait) == false)
                    {
                        <img src="data:image/jpeg;base64,@identityCard.GhostPortrait" alt="Ghost Image" />
                    }
                    else
                    {
                        <p>No Ghost Portrait available</p>
                    }
                    <p><strong>Signature:</strong></p>
                    @if (string.IsNullOrWhiteSpace(identityCard.Signature) == false)
                    {
                        <img src="data:image/jpeg;base64,@identityCard.Signature" alt="Signature" />
                    }
                    else
                    {
                        <p>No Signature available</p>
                    }
                </div>
                <div class="details">
                    <table>
                        <tr>
                            <td><strong>Date Of Expiry:</strong></td>
                            <td class="@(identityCard.IsExpired ? "expired" : "not-expired")">@identityCard.DateOfExpiry</td>
                        </tr>
                        <tr>
                            <td><strong>Name:</strong></td>
                            <td>@identityCard.Name @identityCard.Surname</td>
                        </tr>
                        <tr>
                            <td><strong>Document Number:</strong></td>
                            <td>@identityCard.DocumentNumber</td>
                        </tr>
                        <tr>
                            <td><strong>Personal Number:</strong></td>
                            <td>@identityCard.PersonalNumber</td>
                        </tr>
                        <tr>
                            <td><strong>Issuing State:</strong></td>
                            <td>@identityCard.IssuingStateName</td>
                        </tr>
                        <tr>
                            <td><strong>Nationality:</strong></td>
                            <td>@identityCard.Nationality</td>
                        </tr>
                        <tr>
                            <td><strong>Date Of Birth:</strong></td>
                            <td>@identityCard.DateOfBirth</td>
                        </tr>
                        <tr>
                            <td><strong>Age:</strong></td>
                            <td>@identityCard.Age</td>
                        </tr>
                    </table>
                </div>
            </div>
        }
    </div>
    /****************************************************************************************************************************************/
    <div class="identity-cards">
        @foreach (var passport in Passports)
        {
            <div class="identity-card">
                <div class="portrait">
                    <p><strong>Document category:</strong></p>
                    <td>@passport.DocumentCategory</td>
                    <p><strong></strong></p>

                    <p><strong>Document type:</strong></p>
                    <td>@passport.DocumentName</td>
                    <p><strong></strong></p>

                    <p><strong>Document Image:</strong></p>
                    @if (string.IsNullOrWhiteSpace(passport.DocumentFrontSide) == false)
                    {
                        <img src="data:image/jpeg;base64,@passport.DocumentFrontSide" alt="Document Front Side Image" />
                    }
                    else
                    {
                        <p>No document front side image available</p>
                    }
                    <p><strong>Portrait:</strong></p>
                    @if (string.IsNullOrWhiteSpace(passport.PortraitImage) == false)
                    {
                        <img src="data:image/jpeg;base64,@passport.PortraitImage" alt="Portrait Image" />
                    }
                    else
                    {
                        <p>No Portrait available</p>
                    }
                    <p><strong>Ghost Portrait:</strong></p>
                    @if (string.IsNullOrWhiteSpace(passport.GhostPortrait) == false)
                    {
                        <img src="data:image/jpeg;base64,@passport.GhostPortrait" alt="Ghost Image" />
                    }
                    else
                    {
                        <p>No Ghost Portrait available</p>
                    }
                    <p><strong>Signature:</strong></p>
                    @if (string.IsNullOrWhiteSpace(passport.Signature) == false)
                    {
                        <img src="data:image/jpeg;base64,@passport.Signature" alt="Signature" />
                    }
                    else
                    {
                        <p>No Signature available</p>
                    }
                </div>
                <div class="details">
                    <table>
                        <tr>
                            <td><strong>Date Of Expiry:</strong></td>
                            <td class="@(passport.IsExpired ? "expired" : "not-expired")">@passport.DateOfExpiry</td>
                        </tr>
                        <tr>
                            <td><strong>Name:</strong></td>
                            <td>@passport.Name @passport.Surname</td>
                        </tr>
                        <tr>
                            <td><strong>Document Number:</strong></td>
                            <td>@passport.DocumentNumber</td>
                        </tr>
                        <tr>
                            <td><strong>Personal Number:</strong></td>
                            <td>@passport.PersonalNumber</td>
                        </tr>
                        <tr>
                            <td><strong>Issuing State:</strong></td>
                            <td>@passport.IssuingStateName</td>
                        </tr>
                        <tr>
                            <td><strong>Authority:</strong></td>
                            <td>@passport.Authority</td>
                        </tr>
                        <tr>
                            <td><strong>Date of Issue:</strong></td>
                            <td>@passport.DateOfIssue</td>
                        </tr>
                        <tr>
                            <td><strong>Nationality:</strong></td>
                            <td>@passport.Nationality</td>
                        </tr>
                        <tr>
                            <td><strong>Place of Birth:</strong></td>
                            <td>@passport.PlaceOFBirth</td>
                        </tr>
                        <tr>
                            <td><strong>Date Of Birth:</strong></td>
                            <td>@passport.DateOfBirth</td>
                        </tr>
                        <tr>
                            <td><strong>Age:</strong></td>
                            <td>@passport.Age</td>
                        </tr>
                    </table>
                </div>
            </div>
        }
    </div>
}

<style>
    .identity-cards {
        display: flex;
        flex-wrap: wrap;
        gap: 20px;
        flex-direction: column;
    }

    .identity-card {
        border: 1px solid #ccc;
        padding: 10px;
        display: flex;
        flex-direction: row; /* Align images and table horizontally */
        max-width: 900px;
    }

    .portrait {
        flex: 1; /* Make the portrait section take up 50% of the available space */
        margin-right: 10px; /* Add some spacing between images and table */
    }

        .portrait img {
            max-width: 100%;
            height: auto;
        }

    .details {
        flex: 1; /* Make the details section take up 50% of the available space */
        margin-left: 10px; /* Add some spacing between images and table */
    }

    table {
        width: 100%;
        border-collapse: collapse;
        border-spacing: 0;
        background-color: #fff;
        border-radius: 5px;
        box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
    }

        table th,
        table td {
            padding: 12px 15px;
            text-align: left;
            border-bottom: 1px solid #ddd;
        }

        table th {
            background-color: #f5f5f5;
        }

        table tbody tr:nth-child(even) {
            background-color: #f9f9f9;
        }

        table tbody tr:hover {
            background-color: #e0e0e0;
        }

        table strong {
            font-weight: normal;
            color: #333;
        }

    .expired {
        color: red;
    }

    .not-expired {
        color: green;
    }
</style>



@code {
    private IList<IdentityCard> IdentityCards = new List<IdentityCard>();
    private IList<Passport> Passports = new List<Passport>();

    protected override async Task OnInitializedAsync()
    {
        try
        {
            var response = await Http.GetAsync("https://localhost:44387/Monitoring/GetMails");

            if (response.IsSuccessStatusCode)
            {
                var jsonResponseString = await response.Content.ReadAsStringAsync();
                dynamic jsonResponseDynamic = JsonConvert.DeserializeObject<dynamic>(jsonResponseString);

                // if (jsonResponseDynamic.resultObject.idDocuments != null)
                // {
                    IdentityCards = jsonResponseDynamic.resultObject.idDocuments.ToObject<List<IdentityCard>>();
                //}

                // if (jsonResponseDynamic.resultObject.passports != null)
                // {
                    Passports = jsonResponseDynamic.resultObject.passports.ToObject<List<Passport>>();
                //}
            }
            else
            {
                Console.WriteLine("Failed to load list: ");
            }
        }
        catch (Exception e)
        {
            Console.WriteLine(e);
            throw;
        }
    }
}
