@page "/fetchmail"
@using Scan2Go.Entity.IdsAndDocuments
@using Newtonsoft.Json
@using Scan2Go.Entity.Cars
@using Scan2Go.Entity.RentalAgreement
@using Scan2Go.Entity.Rents
@using Scan2Go.UI.BaseClasses
@inject HttpClient Http
@inject NavigationManager NavigationManager
@inject StateContainer StateContainer;

<PageTitle>Reading mail from outlook and progressing attachments</PageTitle>

<h1>Data of scanned documents</h1>

<p>This component demonstrates fetching mail data from the outlook and show progress data from Regula API responses.</p>

@if (IdentityCards.Any() == false && Passports.Any() == false && DrivingLicenses.Any() == false && Visas.Any() == false)
{
    <p><em>Waiting response from mail fetching...</em></p>
}
else
{
    <div class="button-container">
        <div class="rental-agreement-button" @onclick="CreateRentalAgreement">
            <span>Rental agreement preview</span>
        </div>
    </div>


    <div class="identity-cards">
        @foreach (var identityCard in IdentityCards)
        {
            <div style="display: flex; flex-direction: row;">
                <div class="identity-card">
                    <div class="portrait">
                        <p><strong>Document category:</strong></p>
                        <td>@identityCard.DocumentCategory</td>
                        <p><strong></strong></p>

                        <p><strong>Document type:</strong></p>
                        <td>@identityCard.DocumentType</td>
                        <p><strong></strong></p>

                        <p><strong>Document Front side:</strong></p>
                        @if (string.IsNullOrWhiteSpace(identityCard.DocumentFrontSide) == false)
                        {
                            <img src="data:image/jpeg;base64,@identityCard.DocumentFrontSide" alt="Document Front Side Image" />
                        }
                        else
                        {
                            <p>No document front side image available</p>
                        }
                        <p><strong>Portrait:</strong></p>
                        @if (string.IsNullOrWhiteSpace(identityCard.PortraitImage) == false)
                        {
                            <img src="data:image/jpeg;base64,@identityCard.PortraitImage" alt="Portrait Image" />
                        }
                        else
                        {
                            <p>No Portrait available</p>
                        }
                        <p><strong>Ghost Portrait:</strong></p>
                        @if (string.IsNullOrWhiteSpace(identityCard.GhostPortrait) == false)
                        {
                            <img src="data:image/jpeg;base64,@identityCard.GhostPortrait" alt="Ghost Image" />
                        }
                        else
                        {
                            <p>No Ghost Portrait available</p>
                        }
                        <p><strong>Signature:</strong></p>
                        @if (string.IsNullOrWhiteSpace(identityCard.Signature) == false)
                        {
                            <img src="data:image/jpeg;base64,@identityCard.Signature" alt="Signature" />
                        }
                        else
                        {
                            <p>No Signature available</p>
                        }
                    </div>
                    <div class="details">
                        <table>
                            <tr>
                                <td><strong>Date Of Expiry:</strong></td>
                                <td class="@(identityCard.IsExpired ? "expired" : "not-expired")">@identityCard.DateOfExpiry</td>
                            </tr>
                            <tr>
                                <td><strong>Name:</strong></td>
                                <td>@identityCard.Name @identityCard.Surname</td>
                            </tr>
                            <tr>
                                <td><strong>Document Number:</strong></td>
                                <td>@identityCard.DocumentNumber</td>
                            </tr>
                            <tr>
                                <td><strong>Personal Number:</strong></td>
                                <td>@identityCard.PersonalNumber</td>
                            </tr>
                            <tr>
                                <td><strong>Issuing State:</strong></td>
                                <td>@identityCard.IssuingStateName</td>
                            </tr>
                            <tr>
                                <td><strong>Nationality:</strong></td>
                                <td>@identityCard.Nationality</td>
                            </tr>
                            <tr>
                                <td><strong>Date Of Birth:</strong></td>
                                <td>@identityCard.DateOfBirth</td>
                            </tr>
                            <tr>
                                <td><strong>Age:</strong></td>
                                <td>@identityCard.Age</td>
                            </tr>
                        </table>
                    </div>
                </div>
                <div class="error-messages">
                    @if (identityCard.ErrorMessages.Any())
                    {
                        <td><strong>The following errors were found</strong></td>

                        <table>
                            @foreach (string errorMessage in identityCard.ErrorMessages)
                            {
                                <tr>
                                    <td>@errorMessage</td>
                                </tr>
                            }
                        </table>
                    }
                    else
                    {
                        <td><strong class="success-message">All verifications passed,no errors where found</strong></td>
                    }
                </div>
            </div>
        }
    </div>
    /****************************************************************************************************************************************/
    <div class="identity-cards">
        @foreach (var passport in Passports)
        {
            <div style="display: flex; flex-direction: row;">
                <div class="identity-card">
                    <div class="portrait">
                        <p><strong>Document category:</strong></p>
                        <td>@passport.DocumentCategory</td>
                        <p><strong></strong></p>

                        <p><strong>Document type:</strong></p>
                        <td>@passport.DocumentName</td>
                        <p><strong></strong></p>

                        <p><strong>Document Image:</strong></p>
                        @if (string.IsNullOrWhiteSpace(passport.DocumentFrontSide) == false)
                        {
                            <img src="data:image/jpeg;base64,@passport.DocumentFrontSide" alt="Document Front Side Image" />
                        }
                        else
                        {
                            <p>No document front side image available</p>
                        }
                        <p><strong>Portrait:</strong></p>
                        @if (string.IsNullOrWhiteSpace(passport.PortraitImage) == false)
                        {
                            <img src="data:image/jpeg;base64,@passport.PortraitImage" alt="Portrait Image" />
                        }
                        else
                        {
                            <p>No Portrait available</p>
                        }
                        <p><strong>Ghost Portrait:</strong></p>
                        @if (string.IsNullOrWhiteSpace(passport.GhostPortrait) == false)
                        {
                            <img src="data:image/jpeg;base64,@passport.GhostPortrait" alt="Ghost Image" />
                        }
                        else
                        {
                            <p>No Ghost Portrait available</p>
                        }
                        <p><strong>Signature:</strong></p>
                        @if (string.IsNullOrWhiteSpace(passport.Signature) == false)
                        {
                            <img src="data:image/jpeg;base64,@passport.Signature" alt="Signature" />
                        }
                        else
                        {
                            <p>No Signature available</p>
                        }
                    </div>
                    <div class="details">
                        <table>
                            <tr>
                                <td><strong>Date Of Expiry:</strong></td>
                                <td class="@(passport.IsExpired ? "expired" : "not-expired")">@passport.DateOfExpiry</td>
                            </tr>
                            <tr>
                                <td><strong>Name:</strong></td>
                                <td>@passport.Name @passport.Surname</td>
                            </tr>
                            <tr>
                                <td><strong>Document Number:</strong></td>
                                <td>@passport.DocumentNumber</td>
                            </tr>
                            <tr>
                                <td><strong>Personal Number:</strong></td>
                                <td>@passport.PersonalNumber</td>
                            </tr>
                            <tr>
                                <td><strong>Issuing State:</strong></td>
                                <td>@passport.IssuingStateName</td>
                            </tr>
                            <tr>
                                <td><strong>Authority:</strong></td>
                                <td>@passport.Authority</td>
                            </tr>
                            <tr>
                                <td><strong>Date of Issue:</strong></td>
                                <td>@passport.DateOfIssue</td>
                            </tr>
                            <tr>
                                <td><strong>Nationality:</strong></td>
                                <td>@passport.Nationality</td>
                            </tr>
                            <tr>
                                <td><strong>Place of Birth:</strong></td>
                                <td>@passport.PlaceOFBirth</td>
                            </tr>
                            <tr>
                                <td><strong>Date Of Birth:</strong></td>
                                <td>@passport.DateOfBirth</td>
                            </tr>
                            <tr>
                                <td><strong>Age:</strong></td>
                                <td>@passport.Age</td>
                            </tr>
                        </table>
                    </div>
                </div>
                <div class="error-messages">
                    @if (passport.ErrorMessages.Any())
                    {
                        <td><strong>The following errors were found</strong></td>

                        <table>
                            @foreach (string errorMessage in passport.ErrorMessages)
                            {
                                <tr>
                                    <td>@errorMessage</td>
                                </tr>
                            }
                        </table>
                    }
                    else
                    {
                        <td><strong class="success-message">All verifications passed,no errors where found</strong></td>
                    }
                </div>
            </div>
        }
    </div>
    /****************************************************************************************************************************************/
    <div class="identity-cards">
        @foreach (var drivingLicense in DrivingLicenses)
        {
            <div style="display: flex; flex-direction: row;">
                <div class="identity-card">
                    <div class="portrait">
                        <p><strong>Document category:</strong></p>
                        <td>@drivingLicense.DocumentCategory</td>
                        <p><strong></strong></p>

                        <p><strong>Document type:</strong></p>
                        <td>@drivingLicense.DocumentName</td>
                        <p><strong></strong></p>

                        <p><strong>Document Image:</strong></p>
                        @if (string.IsNullOrWhiteSpace(drivingLicense.DocumentFrontSide) == false)
                        {
                            <img src="data:image/jpeg;base64,@drivingLicense.DocumentFrontSide" alt="Document Front Side Image" />
                        }
                        else
                        {
                            <p>No document front side image available</p>
                        }
                        <p><strong>Portrait:</strong></p>
                        @if (string.IsNullOrWhiteSpace(drivingLicense.PortraitImage) == false)
                        {
                            <img src="data:image/jpeg;base64,@drivingLicense.PortraitImage" alt="Portrait Image" />
                        }
                        else
                        {
                            <p>No Portrait available</p>
                        }
                        <p><strong>Signature:</strong></p>
                        @if (string.IsNullOrWhiteSpace(drivingLicense.Signature) == false)
                        {
                            <img src="data:image/jpeg;base64,@drivingLicense.Signature" alt="Signature" />
                        }
                        else
                        {
                            <p>No Signature available</p>
                        }
                    </div>
                    <div class="details">
                        <table>
                            <tr>
                                <td><strong>Date Of Expiry:</strong></td>
                                <td class="@(drivingLicense.IsExpired ? "expired" : "not-expired")">@drivingLicense.DateOfExpiry</td>
                            </tr>
                            <tr>
                                <td><strong>Name:</strong></td>
                                <td>@drivingLicense.Name @drivingLicense.Surname</td>
                            </tr>
                            <tr>
                                <td><strong>Document Number:</strong></td>
                                <td>@drivingLicense.DocumentNumber</td>
                            </tr>
                            <tr>
                                <td><strong>Personal Number:</strong></td>
                                <td>@drivingLicense.PersonalNumber</td>
                            </tr>
                            <tr>
                                <td><strong>Issuing State:</strong></td>
                                <td>@drivingLicense.IssuingStateName</td>
                            </tr>
                            <tr>
                                <td><strong>DL Category:</strong></td>
                                <td>@drivingLicense.DlCategory</td>
                            </tr>
                            <tr>
                                <td><strong>Date of Issue:</strong></td>
                                <td>@drivingLicense.DateOfIssue</td>
                            </tr>
                            <tr>
                                <td><strong>Place of Birth:</strong></td>
                                <td>@drivingLicense.PlaceOFBirth</td>
                            </tr>
                            <tr>
                                <td><strong>Date Of Birth:</strong></td>
                                <td>@drivingLicense.DateOfBirth</td>
                            </tr>
                            <tr>
                                <td><strong>Age:</strong></td>
                                <td>@drivingLicense.Age</td>
                            </tr>
                        </table>
                    </div>
                </div>
                <div class="error-messages">
                    @if (drivingLicense.ErrorMessages.Any())
                    {
                        <td><strong>The following errors were found</strong></td>

                        <table>
                            @foreach (string errorMessage in drivingLicense.ErrorMessages)
                            {
                                <tr>
                                    <td>@errorMessage</td>
                                </tr>
                            }
                        </table>
                    }
                    else
                    {
                        <td><strong class="success-message">All verifications passed,no errors where found</strong></td>
                    }
                </div>
            </div>
        }
    </div>
    /****************************************************************************************************************************************/
    <div class="identity-cards">
        @foreach (var visa in Visas)
        {
            <div style="display: flex; flex-direction: row;">
                <div class="identity-card">
                    <div class="portrait">
                        <p><strong>Document category:</strong></p>
                        <td>@visa.DocumentCategory</td>
                        <p><strong></strong></p>

                        <p><strong>Document type:</strong></p>
                        <td>@visa.DocumentType</td>
                        <p><strong></strong></p>

                        <p><strong>Document Image:</strong></p>
                        @if (string.IsNullOrWhiteSpace(visa.DocumentFrontSide) == false)
                        {
                            <img src="data:image/jpeg;base64,@visa.DocumentFrontSide" alt="Document Front Side Image" />
                        }
                        else
                        {
                            <p>No document front side image available</p>
                        }
                        <p><strong>Portrait:</strong></p>
                        @if (string.IsNullOrWhiteSpace(visa.PortraitImage) == false)
                        {
                            <img src="data:image/jpeg;base64,@visa.PortraitImage" alt="Portrait Image" />
                        }
                        else
                        {
                            <p>No Portrait available</p>
                        }
                    </div>
                    <div class="details">
                        <table>
                            <tr>
                                <td><strong>Date Of Expiry:</strong></td>
                                <td class="@(visa.IsExpired ? "expired" : "not-expired")">@visa.DateOfExpiry</td>
                            </tr>
                            <tr>
                                <td><strong>Name:</strong></td>
                                <td>@visa.Name @visa.Surname</td>
                            </tr>
                            <tr>
                                <td><strong>Visa Number:</strong></td>
                                <td>@visa.VisaNumber</td>
                            </tr>
                            <tr>
                                <td><strong>Issuing State:</strong></td>
                                <td>@visa.IssuingStateName</td>
                            </tr>
                            <tr>
                                <td><strong>Date of Issue:</strong></td>
                                <td>@visa.DateOfIssue</td>
                            </tr>
                            <tr>
                                <td><strong>Duration of state:</strong></td>
                                <td>@visa.DurationOfStay</td>
                            </tr>
                            <tr>
                                <td><strong>Valid from:</strong></td>
                                <td>@visa.VisaValidFrom</td>
                            </tr>
                            <tr>
                                <td><strong>Date Of Birth:</strong></td>
                                <td>@visa.DateOfBirth</td>
                            </tr>
                            <tr>
                                <td><strong>Age:</strong></td>
                                <td>@visa.Age</td>
                            </tr>
                        </table>
                    </div>
                </div>
                <div class="error-messages">
                    @if (visa.ErrorMessages.Any())
                    {
                        <td><strong>The following errors were found</strong></td>

                        <table>
                            @foreach (string errorMessage in visa.ErrorMessages)
                            {
                                <tr>
                                    <td>@errorMessage</td>
                                </tr>
                            }
                        </table>
                    }
                    else
                    {
                        <td><strong class="success-message">All verifications passed,no errors where found</strong></td>
                    }
                </div>
            </div>

        }
    </div>
}

<style>
    /* Style the container to position the buttons and manage their layout */
    .button-container {
        display: flex;
        justify-content: space-between;
        align-items: center;
        margin-bottom: 20px; /* Add margin to create separation between the buttons and the list */
    }

    /* Style the "Rental agreement" button */
    .rental-agreement-button {
        padding: 10px 20px; /* Adjust the padding to make the button wider */
        background-color: #007BFF;
        color: white;
        font-size: 16px; /* Adjust the font size as needed */
        cursor: pointer;
        margin-left: auto; /* Push the button to the right */
    }

    .error-messages {
        flex: 1;
        margin-left: 20px;
        color: red; /* Style error messages in red */
    }

    .success-message {
        color: green; /* Style success message in green */
    }

    .identity-cards {
        display: flex;
        flex-wrap: wrap;
        gap: 20px;
        flex-direction: column;
    }

    .identity-card {
        border: 1px solid #e0e0e0;
        background-color: #fff;
        box-shadow: 0 2px 6px rgba(0, 0, 0, 0.1);
        border-radius: 8px;
        padding: 20px;
        display: flex;
        flex-direction: row;
        max-width: 900px;
    }

    .portrait {
        flex: 1;
        margin-right: 20px;
    }

        .portrait img {
            max-width: 100%;
            height: auto;
            border-radius: 8px;
            box-shadow: 0 0 10px rgba(0, 0, 0, 0.2);
        }

    .details {
        flex: 1;
        margin-left: 20px;
    }

    table {
        width: 100%;
        border-collapse: collapse;
        border-spacing: 0;
        background-color: #fff;
        border-radius: 8px;
        box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
    }

        table th,
        table td {
            padding: 15px;
            text-align: left;
            border-bottom: 1px solid #f0f0f0;
            color: #333;
        }

        table th {
            background-color: #f5f5f5;
        }

        table tbody tr:nth-child(even) {
            background-color: #f9f9f9;
        }

        table tbody tr:hover {
            background-color: #e0e0e0;
        }

    .expired {
        color: red;
    }

    .not-expired {
        color: green;
    }
</style>

@code {
    private IList<IdentityCard> IdentityCards = new List<IdentityCard>();
    private IList<Passport> Passports = new List<Passport>();
    private IList<DrivingLicense> DrivingLicenses = new List<DrivingLicense>();
    private IList<Visa> Visas = new List<Visa>();
    private Rents rent = new Rents();
    private Cars car = new Cars();

    protected override async Task OnInitializedAsync()
    {
        try
        {
            Http = new HttpClient();
            Http.Timeout = TimeSpan.FromMinutes(10);
            var response = await Http.GetAsync("https://localhost:44387/Monitoring/GetMails");

            if (response.IsSuccessStatusCode)
            {
                var jsonResponseString = await response.Content.ReadAsStringAsync();
                dynamic jsonResponseDynamic = JsonConvert.DeserializeObject<dynamic>(jsonResponseString);

                IdentityCards = jsonResponseDynamic.resultObject.idDocuments.ToObject<List<IdentityCard>>();
                Passports = jsonResponseDynamic.resultObject.passports.ToObject<List<Passport>>();
                DrivingLicenses = jsonResponseDynamic.resultObject.drivingLicenses.ToObject<List<DrivingLicense>>();
                Visas = jsonResponseDynamic.resultObject.visas.ToObject<List<Visa>>();
                rent = jsonResponseDynamic.resultObject.rent.ToObject<Rents>();
                car = jsonResponseDynamic.resultObject.car.ToObject<Cars>();
            }
            else
            {
                Console.WriteLine("Failed to load list: ");
            }
        }
        catch (Exception e)
        {
            Console.WriteLine(e);
            throw;
        }
    }

    private void CreateRentalAgreement()
    {
        Entity.RentalAgreement.RentalAgreement rentalAgreement = new Entity.RentalAgreement.RentalAgreement();

        rentalAgreement.CarDeliveryDate = DateTime.Now.ToString();
        rentalAgreement.CarId = car.CarName;
        rentalAgreement.CarInsuranceOption = rent.HasInsurance.ToString();
        rentalAgreement.CarMake = car.DefCarBrands.NameValue;
        rentalAgreement.CarModel = car.DefCarModels.NameValue;
        rentalAgreement.CarTotalCharge = rent.TotalCharge.ToString();
        rentalAgreement.CarTotalChargeCurrency = "$";
        rentalAgreement.CarYear = car.CarYear.ToString();
        rentalAgreement.CustomerBirthDate = IdentityCards.FirstOrDefault().DateOfBirth;
        rentalAgreement.CustomerCountry = IdentityCards.FirstOrDefault().Nationality;
        rentalAgreement.CustomerDrivingLicenseExpiryDate = DrivingLicenses.FirstOrDefault().DateOfExpiry.ToString();
        rentalAgreement.CustomerPassportExpiryDate = Passports.FirstOrDefault().DateOfExpiry.ToString();
        rentalAgreement.CustomerVisaExpiryDate = Visas.FirstOrDefault().DateOfExpiry.ToString();
        rentalAgreement.CustomerName = IdentityCards.FirstOrDefault().Name;
        rentalAgreement.CustomerSurname = IdentityCards.FirstOrDefault().Surname;

        StateContainer.AddRoutingObjectParameter(rentalAgreement);

        NavigationManager.NavigateTo($"RentalAgreementPreview/{rentalAgreement.GetHashCode()}");
    }
}
